__version__ = "$Revision: 1.5 $"

"""
$Log: cHelpDataGrabber.py,v $
Revision 1.5  2002/02/11 19:52:32  aharth
modified build stuff

Revision 1.4  2002/02/10 22:46:05  aharth
changed jscript stuff for session recommendation

Revision 1.3  2001/05/26 13:00:49  i10614
changed iowl version and formated it

Revision 1.2  2001/03/28 21:26:11  i10614
modified GUI

Revision 1.1.1.1  2001/03/24 19:22:56  i10614
Initial import to stio1 from my cvs-tree

Revision 1.4  2001/02/25 12:32:42  mpopp
*** empty log message ***

Revision 1.3  2001/02/22 14:47:43  mbauer
new Gui-look implemented

Revision 1.2  2001/02/20 21:22:34  mbauer
bugfix concerning helpfile-location



"""
import pManager

class cHelpDataGrabber:
    """Responsible for displaying online-help"""

    def __init__(self, cGuiRequestHandler):
        """Constructor"""
        self.cGui = cGuiRequestHandler
        self.sHelpFileName = '../pGui/help.ht'

    def SetHelpFileName(self, name):
        """Set filename where to find help-page"""
        self.sHelpFileName = name

    def GetHtml(self, dParams):
        """Return complete HTML-page

        Since helpfile is static, just load it from disc

        beginning with tag <html>
        ending with tag </html>

        http headers etc are generated by proxy.

        """

        # load helpfile from disc
        helpfile = open(self.sHelpFileName, 'r')

        # read helpfile to string
        sContent = helpfile.read()

        # Get recording Status of proxy
        bState = pManager.manager.GetProxyInterface().GetStatus()

        # Get Header
        sHeader = self.cGui.GetHeader('iOwl.net - help')

        # Get first part of page
        sPart1 = ''
        if bState == 0:
            # Owl not logging
            # Get inactive page
            sPart1 = self.cGui.GetInactivePage()
        else:
            # owl is logging
            # get active page
            sPart1 = self.cGui.GetActivePage()

        # add version and build
        sContent = sContent + '<p class="message">Version: %s, build %s</p>' % (pManager.manager.GetVersion(), pManager.manager.GetBuild())

       # Get second part of page
        sPart2 = self.cGui.GetEndPage()

        # Glue it
        sPage = sHeader + sPart1 + sContent + sPart2

        # return string and content-type
        return sPage, 'text/html'











##################################
if __name__=='__main__':
        # load helpfile from disc
        helpfile = open('../pGui/help.ht', 'r')

        # read helpfile to string
        sContent = helpfile.read()

        print sContent
