__version__ = "$Revision: 1.4 $"

"""
$Log: cConfigureGrabber.py,v $
Revision 1.4  2002/02/19 18:53:57  aharth
tried to unify UI

Revision 1.3  2002/01/29 20:35:23  Saruman
changed priority of debug output

Revision 1.2  2001/08/10 18:31:48  i10614
minor cleanups

Revision 1.1  2001/07/15 10:14:15  i10614
initial commit



"""

import pManager

class cConfigureGrabber:
    """Responsible for displaying configuration page"""

    def __init__(self, cGuiRequestHandler):
        """Constructor"""
        self.cGui = cGuiRequestHandler

    def GetHtml(self, dParams):
        """Return complete HTML-page

        return string
        - beginning with tag <html>
        - ending with tag </html>

        http headers etc are generated by proxy!

        """

        # Get Header
        sHeader = self.cGui.GetHeader('iOwl.net - Configuration')

        # Get recording Status of proxy
        bState = pManager.manager.GetProxyInterface().GetStatus()

        # Get first part of page
        sPart1 = ''
        if bState == 0:
            # Owl not logging
            # Get inactive page
            sPart1 = self.cGui.GetInactivePage()
        else:
            # owl is logging
            # get active page
            sPart1 = self.cGui.GetActivePage()

        # header
        sContent = '<h2>Configuration</h2>'

        # get content
        sContent = sContent + self.ParseConfig()

        # get end part
        sPart2 = self.cGui.GetEndPage()

        # Glue it
        sPage = sHeader + sPart1 + sContent + sPart2

        # return page and content-type
        return sPage, 'text/html'


    def ParseConfig(self):
        """Read configfile and build configuration
        page

        """

        # get configfile from manager
        Config = pManager.manager.GetConfHandle()

        # generate script
        script ="""
        <script language="JavaScript">
        <!-- Hide from older browsers
            function changeconfig(section, option, document)
            {
                var loc = "http://my.iowl.net/command?action=updateconfig&section=" + section + "&option=" + option
                var value = document.form.Wert.value
                loc = loc + "&value=" + value
                window.location.href = loc;
            }
        // -->
        </script>
        """

        sContent = script

        for sect in Config.sections():
            pManager.manager.DebugStr('cConfigureGrabber '+ __version__ +': reading section "'+sect+'".', 4)
            # start table
            sContent = sContent + '\n<p>\n    <table border>\n'
            # header
            sContent = sContent + '        <tr>\n            <th colspan="3">'+sect+'</th>\n        </tr>'
            # iterate over available options for this section
            for opt in Config.options(sect):
                value = Config.get(sect,opt)
                pManager.manager.DebugStr('cConfigureGrabber '+ __version__ +': Option "'+opt+'", value "'+ value, 4)
                # start formular
                sFormName = sect+opt
                sForm = """
        <tr>
            <form name="%s">
            <td>%s</td>
            <td><input name="Wert" size=20 maxlength=40 value="%s"></td>
            <td><input type="button" name="change" value="change" onClick="javascript:changeconfig(\'%s\', \'%s\', this)"></td>
            </form>
        </tr>""" %(sFormName, opt, value, sect, opt)

                sContent = sContent + sForm

            # end table
            sContent = sContent + '\n    </table>\n</p>'

        # done all sections
        return sContent









##################################
if __name__=='__main__':
    import ConfigParser
    sContent = "<html><body>"
    cg = cConfigureGrabber(None)
    sContent = cg.ParseConfig(sContent)
    sContent = sContent + '</body></html>'
    print sContent











