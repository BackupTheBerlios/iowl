__version__ = "$Revision: 1.4 $"

"""
$Log: cSessionRecommendationDataGrabber.py,v $
Revision 1.4  2002/02/10 22:46:05  aharth
changed jscript stuff for session recommendation

Revision 1.3  2001/04/07 17:06:23  i10614
many, many bugfixes for working network communication

Revision 1.2  2001/03/28 19:53:07  i10614
replaced http://iowl with http://my.iowl.net

Revision 1.1.1.1  2001/03/24 19:22:59  i10614
Initial import to stio1 from my cvs-tree

Revision 1.4  2001/02/25 12:32:42  mpopp
*** empty log message ***

Revision 1.3  2001/02/22 20:41:49  mbauer
revamped gui :-)

Revision 1.2  2001/02/22 14:47:43  mbauer
new Gui-look implemented

Revision 1.1  2001/02/21 14:50:13  mbauer
initial release



"""
import pManager
import urlparse
import time

class cSessionRecommendationDataGrabber:
    """Get recommendations for current session"""

    def __init__(self, cGuiRequestHandler):
        """Constructor"""
        self.cGuiRequestHandler = cGuiRequestHandler


    def GetHtml(self, dParams):
        """Return complete HTML-page

        To allow the package pRecommendation to gather answers,
        start Query and return a page containing a java-script countdown.
        After countdown is finished, start a new request that
        forces pRecommendation to display its results.

        http headers etc are generated by proxy.

        dParams - empty dict

        return  -- string (<html>.....</html), string 'content-type'

        """

        # get pRecommendationInterface
        cRecommendationInterface = pManager.manager.GetRecommendationInterface()

        # start request for Recommendations
        iReqID = cRecommendationInterface.GenerateSessionRequest()

        time.sleep(3)

        # get list of clicks
        lClicks = cRecommendationInterface.GetRecommendations(iReqID)

        # get header
        sHeader = self.cGuiRequestHandler.GetHeader('Recommendations for Current Session')

        # Get recording Status of proxy
        bState = pManager.manager.GetProxyInterface().GetStatus()

        # Get first part of page
        sPart1 = ''
        if bState == 0:
            # Owl not logging
            # Get inactive page
            sPart1 = self.cGuiRequestHandler.GetInactivePage()
        else:
            # owl is logging
            # get active page
            sPart1 = self.cGuiRequestHandler.GetActivePage()

        # get dynamic content
        sContent = '<h2>Recommendations</h2>'
        if lClicks == None:
            sContent = sContent + '<p class="message">Sorry, i did not find any ressources i could recommend. :-(</p>'
        else:
            sContent = sContent + '<p class="message">Success :-). I would recommend you have a look at the following ressource(s):</p>'
            iCounter = 0
            for click in lClicks:
                iCounter+=1
                sContent = sContent +'<p><a href="%s" target="_new">%s</a></p>' % (str(urlparse.urlunparse(click.GetUrl())), str(click.GetTitle()))
                if (iCounter > 15):
                    break

        # Get second part of page
        sPart2 = self.cGuiRequestHandler.GetEndPage()

        # glue together
        sPage = sHeader + sPart1 + sContent + sPart2

        # return page and content-type
        return sPage, 'text/html'
