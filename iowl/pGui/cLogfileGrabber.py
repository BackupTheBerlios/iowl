__version__ = "$Revision: 1.2 $"

"""
$Log: cLogfileGrabber.py,v $
Revision 1.2  2002/02/19 18:53:57  aharth
tried to unify UI

Revision 1.1  2001/07/15 10:13:43  i10614
initial commit



"""

import pManager

class cLogfileGrabber:
    """Responsible for displaying logfile

    returns html-page containing last 100 lines of logfile

    """

    def __init__(self, cGuiRequestHandler):
        """Constructor"""
        self.cGui = cGuiRequestHandler

    def GetHtml(self, dParams):
        """Return complete HTML-page

        load logfile from disc

        return string
        - beginning with tag <html>
        - ending with tag </html>

        dParams: dict containing one pair ('inumlines':'<number>')
        http headers etc are generated by proxy!

        """

        # get desired number of lines
        iNumLines = int(dParams['inumlines'])

        # Get Header
        sHeader = self.cGui.GetHeader('iOwl.net - LogFile')

        # Get recording Status of proxy
        bState = pManager.manager.GetProxyInterface().GetStatus()

        # Get first part of page
        sPart1 = ''
        if bState == 0:
            # Owl not logging
            # Get inactive page
            sPart1 = self.cGui.GetInactivePage()
        else:
            # owl is logging
            # get active page
            sPart1 = self.cGui.GetActivePage()

        # begin html
        sContent = "<h2>Logfile</h2>"

        sContent = sContent + "<p><pre>"

        # load logfile from disc
        Logfile = open(pManager.manager.GetLogfilePath(), 'r')

        # get all lines from logfile
        lLines = Logfile.readlines()

        # get number of lines
        NumLines = len(lLines)

        if NumLines < iNumLines:
            # display all lines
            sContent = sContent + str(lLines)
        else:
            # only get last lines
            for linecounter in range((NumLines - iNumLines), NumLines):
                sContent = sContent + lLines[linecounter]

        # end html
        sContent = sContent + "</pre></p>"

        # get end part
        sPart2 = self.cGui.GetEndPage()

        # Glue it
        sPage = sHeader + sPart1 + sContent + sPart2

        # return page and content-type
        return sPage, 'text/html'















##################################
if __name__=='__main__':
        # load helpfile from disc
        helpfile = open('../pGui/help.ht', 'r')

        # read helpfile to string
        sContent = helpfile.read()

        print sContent












