__version__ = "$Revision: 1.8 $"

"""
$Log: cDefaultDataGrabber.py,v $
Revision 1.8  2002/02/10 21:40:54  aharth
added showrules feature, cleaned up ui

Revision 1.7  2002/02/10 19:42:21  aharth
added stylesheet support

Revision 1.6  2001/04/14 14:56:00  i10614
interface changes

Revision 1.5  2001/03/28 21:26:11  i10614
modified GUI

Revision 1.4  2001/03/28 19:53:07  i10614
replaced http://iowl with http://my.iowl.net

Revision 1.3  2001/03/27 18:23:10  i10614
added session creation date to history

Revision 1.2  2001/03/26 12:08:23  i10614
added version and build date

Revision 1.1.1.1  2001/03/24 19:22:54  i10614
Initial import to stio1 from my cvs-tree

Revision 1.13  2001/03/19 00:58:18  mbauer
added timestamp to history output

Revision 1.12  2001/03/18 22:56:39  mbauer
fixed bug where clickstream history reversed itself each time displaying it

Revision 1.11  2001/02/25 21:29:57  mpopp
deleted html-tag

Revision 1.10  2001/02/22 23:13:05  mbauer
cosmetic changes

Revision 1.9  2001/02/22 22:24:30  mbauer
catch unicode exception while building html

Revision 1.8  2001/02/22 22:11:16  mbauer
reversed clicklist, added "current session"

Revision 1.6  2001/02/22 21:09:51  a
minor changes

Revision 1.5  2001/02/22 20:41:49  mbauer
revamped gui :-)

Revision 1.3  2001/02/21 10:53:02  mbauer
activated cAboutDataGrabber, changing active/deactive is stored in configfile

Revision 1.2  2001/02/20 21:15:03  mbauer
initial release



"""
import pManager
import urlparse
import time

class cDefaultDataGrabber:
    """Responsible for displaying the main iOwl-page"""

    def __init__(self, cGuiRequestHandler):
        """Constructor"""
        self.cGui = cGuiRequestHandler

    def GetHtml(self, dParams):
        """Return complete HTML-page

        beginning with tag <html>
        ending with tag </html>

        http headers etc are generated by proxy.

        """

        # Get Header
        sHeader = self.cGui.GetHeader('iOwl.net')

        # Get recording Status of proxy
        bState = pManager.manager.GetProxyInterface().GetStatus()

        # Get first part of page
        sPart1 = ''
        if bState == 0:
            # Owl not logging
            # Get inactive page
            sPart1 = self.cGui.GetInactivePage()
        else:
            # owl is logging
            # get active page
            sPart1 = self.cGui.GetActivePage()

        # get pClickstreamInterface
        cClickstreamInterface = pManager.manager.GetClickstreamInterface()

        # get list of sessions
        lSessions = cClickstreamInterface.GetSessions()

        # generate dynamic content
        sContent = '<h2>History</h2>\n'
        if len(lSessions)==0:
            # no history...
            sContent = sContent + 'Sorry, there is no surfing history yet. Please start surfing first :-)'
        else:
            iMaxClicks = 30
            iSessionIndex = 0
            iClickIndex = 0
            for cSession in lSessions:
                # iSessionIndex = iSessionIndex + 1
                #if iSessionIndex == 1:
                    # first session
                #     sContent = sContent + '<h4>Current Session:</h4>'
                # else:
                #     sContent = sContent + '<h4>Session No. '+ str(iSessionIndex)+'</h4>'

                # session creation date
                #sContent = sContent + '<h4>%s</h4>' % time.ctime(cSession.GetCreationTime())
                # get copy of all clicks from session
                lClicks = cSession.GetClicks()[:]
                # reverse order of clicks
                lClicks.reverse()
                for click in lClicks:
                    iClickIndex = iClickIndex + 1
                    # get url as string
                    sUrl = urlparse.urlunparse(click.GetUrl())
                    # build link
                    sLink = '\t\t<div class="title"><a href="%s">%s</a></div>\n' % (sUrl, click.GetTitle())
                    sDisplayUrl = '\t\t<div class="url">%s</div>\n' % sUrl
                    sDate = '\t\t<div class="surftime">%s</div>\n' % time.ctime(click.GetTimestamp())
                    sRemove = '\t\t<div class="action"><a href="http://my.iowl.net/command?action=remove&url=%s">remove</a> from history</div>\n' % sUrl
                    sSingleRec = '\t\t<div class="action">get <a href="http://my.iowl.net/command?action=singlerecommendation&sUrl=%s">recommendations</a> for this link</div>\n' % sUrl
                    # add to complete string
                    try:
                        # XXX: sometimes i get an UnicodeError: ASCII decoding error: ordinal not in range(128)
                        sContent = sContent + '\t<p class="click">\n' + sLink + sDisplayUrl + sDate + sRemove + sSingleRec + '\t</p>\n'
                    except:
                        # skip this click...
                        pass
                    if iClickIndex > iMaxClicks:
                        # dont display too many clicks!
                        break
                if iClickIndex > iMaxClicks:
                    # dont display too many clicks!
                    break

        # Get second part of page
        sPart2 = self.cGui.GetEndPage()

        # Glue it
        sPage = sHeader + sPart1 + sContent + sPart2

        # return string and content-type
        return sPage, 'text/html'
